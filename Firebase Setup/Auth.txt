                          ************** AUTH *************

                              STEPS TO AUTH FOR RECT

  1. Take a email , password , username form the form submit handle .

  ---Sign-UP

   2 .   In submitHandle method use this snippit ==>  
---------------------------------------------------------------------
           
  const submitHandle = (e) => {
    e.preventDefault();

    auth
      .createUserWithEmailAndPassword(email, password)
      .then(console.log("successfully signup"))
      .catch((error) => alert(error.message));

    setUserName("");
    setEmail("");
    setPassword("");
  };

-------------------------------------------------------------------------

  3.  create a useEffect component and paste this snippit ==> (app.js component)

--------------------------------------------------------------------------

    useEffect(() => {
       const unsubscribe = auth.onAuthStateChanged((authUser) => {
      if (authUser) {
        //user has login
        console.log(authUser);
        setUser(authUser);

        if (authUser.displayName) {
          //dont update userName
        } else {
          //if we just created user
          return authUser.updateProfile({
            displayName: userName,
          });
        }
      } else {
        //user has not login
        setUser(null);
      }
    });

    return () => {
      //prefrom some cleanup action
        unsubscribe();
    };
    }, [user, userName]);

------------------------------------------------------------

   OR ANOTHER METHOD WE USE LIKE THIS to push home page to sign or login 

------------------------------------------------------

   const register = (e) => {
    e.preventDefault();
    console.log("register click");
    auth
      .createUserWithEmailAndPassword(email, password)
      .then(() => {
        history.push("/");
      })
      .catch((error) => alert(error.message));

    setEmail("");
    setPassword("");
  };
                                 //for login ----
  const login = (e) => {
    e.preventDefault();
    auth
      .signInWithEmailAndPassword(email, password)
      .then(() => {
        history.push("/");
      })
      .catch((error) => alert(error.message));
  };


--------------------------------------------------------------------

	when we use the contextAPi then we use like this ==>> 

-----------------------------------------------------------------

  useEffect(() => {
    const unSubscribe = auth.onAuthStateChanged((authUser) => {
      if (authUser) {
        // User is login here , do something
        dispatch({
          type: "IS USER LOGIN",
          payload: authUser,
        });
        history.push("/");
      } else {
        //user is logout  , do soemthing
        dispatch({
          type: "IS USER LOGIN",
          payload: null,
        });
      }
    });

    return () => {
      unSubscribe();
    };
  }, []);

---------------------------------------------------------------------






